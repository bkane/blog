{"title":"Hello Machine Learning World","markdown":{"yaml":{"title":"Hello Machine Learning World","author":"Ben Kane","date":"2023-04-25","image":"grizzly.jpg","categories":["learning"],"format":{"html":{"code-fold":true}}},"headingText":"Learning So Far","containsRefs":false,"markdown":"\n\nThis is the first post in a Quarto blog. Turns out it's Quarto, not Quatro. I only discovered that a few minutes ago.\n\nThen again, I didn't know what Quatro was at all half an hour ago. I was looking at [fastpages](https://github.com/fastai/fastbook/blob/master/app_blog.ipynb), which is a way of writing blog posts on GitHub Pages and incorporating Jupyter notebook cells and output. And what is a Jupyter notebook? Well it's like an environment where you can mix Python code and markdown text for a very interactive way of experimenting with and demonstrating machine concepts. And you can run these notebooks in the cloud in places like Colab or Kaggle. Then you can export your notebook code to regular Python and make an app.py file that creates a Gradio interface for running a machine learning model on a HuggingFace Space like this [Bear Classifier](https://huggingface.co/spaces/bk6000/bear_classifier) I made.\n\nWhat the heck did I just say?\n\nI've used Python off and on for about 15 years now. It's been a language I dabble with for a week or two to try out something like writing a Discord bot, generating web pages from a template, doing some web scraping, or messing about with machine learning/deep learning. I play for a bit, get a bit bogged down with package management and environment management, learn about some new templating language, a new meta-meta-meta install manager with some cute name like anaconda or conda or cda or whatever. Then after my experiment runs its course, I promptly drop Python and go back to whatever it is I'm actually doing.\n\nIt's a very similar to the experience I have with web development, where there are myriad packages and frameworks and versions of *everything*, all packed with syntactic sugar and code generation ostensibly to make it easy to pick up. But the dependencies always collapse, the documentations and the tutorials always get outdated, and you're left trying to follow the trail from breadcrumb to breadcrumb in order to get something working, usually without really understanding how it all comes together. And it's not for lack of trying! You can dig in and see how the tools and templates and managers all work, but ultimately it just feels like layers of frameworks obfuscating the task at hand.\n\nOf course, when the layers of 'simplifying' frameworks get to be too much... you need to make a framework that eschews all the cruft and *really* makes things easy.\n\n![Standards](https://imgs.xkcd.com/comics/standards_2x.png)\n\nAnyway, here I am writing a blog to record how I'm feeling along this journey of learning machine learning (for probably the second or third time). I've been following the [fastai course](https://course.fast.ai/) which has been great for getting things off the ground quickly. It also recommended I start blogging, so here we are.\n\nSo far, I've done two video lessons and the two accompanying chapters of the book (which take slightly different approaches to the same concepts). I'm appreciating the reinforcement thus far, because I've bounced off this subject in the past.\n\nSome big, immediate learnings: you can use a small amount of data to fine-tune an existing model, and get something useful for a standard application to just call like any other function. The idea of integrating a trained model into something like a video game is actually incredibly... doable. Sure, there are frameworks and languages and whatever other hurdles to overcome before I just drop a method into a Unity game, but it's really not that far off.\n\nIn the first couple of lessons, I've fine-tuned an image classifer based on the resnet18 model. We've even dabbled with the HuggingFace community site to make a public Space, which is a site that hosts the model I trained to classify images between black bears, grizzly bears, and teddy bears. It's not very sophisticated, but it's a surprisingly complete end-to-end deployment of a *thing* that uses an image classification model. And you can just use it right now!\n\n[![A basic bear classifier that I made ➡ Click to try it out on huggingface.co!](bear_classifier.jpg)](https://huggingface.co/spaces/bk6000/bear_classifier)\n\nOkay, one more thing before I go: this blog post can have Python code in it, like a notebook. I should try that out, otherwise this has just been a really, really complicated Wordpress site.\n\n```{python}\nfrom duckduckgo_search import ddg_images\nfrom fastcore.all import *\nfrom fastdownload import download_url\nfrom fastai.vision.all import *\n\ndef search_images(term, max_images=30):\n    print(f\"Searching for '{term}'\")\n    return L(ddg_images(term, max_results=max_images)).itemgot('image')\n\nurls = search_images('grizzly bear', max_images=1)\ndest = 'grizzly.jpg'\ndownload_url(urls[0], dest, show_progress=False)\n\nim = Image.open(dest)\nim.to_thumb(256,256)\n```\n\nNow to get this blog post rendered and committed to a GitHub repo and published to GitHub Pages, preferably using an automated GitHub Action..........\n\nThis was a lot easier in the GeoCities days.","srcMarkdownNoYaml":"\n\nThis is the first post in a Quarto blog. Turns out it's Quarto, not Quatro. I only discovered that a few minutes ago.\n\nThen again, I didn't know what Quatro was at all half an hour ago. I was looking at [fastpages](https://github.com/fastai/fastbook/blob/master/app_blog.ipynb), which is a way of writing blog posts on GitHub Pages and incorporating Jupyter notebook cells and output. And what is a Jupyter notebook? Well it's like an environment where you can mix Python code and markdown text for a very interactive way of experimenting with and demonstrating machine concepts. And you can run these notebooks in the cloud in places like Colab or Kaggle. Then you can export your notebook code to regular Python and make an app.py file that creates a Gradio interface for running a machine learning model on a HuggingFace Space like this [Bear Classifier](https://huggingface.co/spaces/bk6000/bear_classifier) I made.\n\nWhat the heck did I just say?\n\nI've used Python off and on for about 15 years now. It's been a language I dabble with for a week or two to try out something like writing a Discord bot, generating web pages from a template, doing some web scraping, or messing about with machine learning/deep learning. I play for a bit, get a bit bogged down with package management and environment management, learn about some new templating language, a new meta-meta-meta install manager with some cute name like anaconda or conda or cda or whatever. Then after my experiment runs its course, I promptly drop Python and go back to whatever it is I'm actually doing.\n\nIt's a very similar to the experience I have with web development, where there are myriad packages and frameworks and versions of *everything*, all packed with syntactic sugar and code generation ostensibly to make it easy to pick up. But the dependencies always collapse, the documentations and the tutorials always get outdated, and you're left trying to follow the trail from breadcrumb to breadcrumb in order to get something working, usually without really understanding how it all comes together. And it's not for lack of trying! You can dig in and see how the tools and templates and managers all work, but ultimately it just feels like layers of frameworks obfuscating the task at hand.\n\nOf course, when the layers of 'simplifying' frameworks get to be too much... you need to make a framework that eschews all the cruft and *really* makes things easy.\n\n![Standards](https://imgs.xkcd.com/comics/standards_2x.png)\n\n### Learning So Far\nAnyway, here I am writing a blog to record how I'm feeling along this journey of learning machine learning (for probably the second or third time). I've been following the [fastai course](https://course.fast.ai/) which has been great for getting things off the ground quickly. It also recommended I start blogging, so here we are.\n\nSo far, I've done two video lessons and the two accompanying chapters of the book (which take slightly different approaches to the same concepts). I'm appreciating the reinforcement thus far, because I've bounced off this subject in the past.\n\nSome big, immediate learnings: you can use a small amount of data to fine-tune an existing model, and get something useful for a standard application to just call like any other function. The idea of integrating a trained model into something like a video game is actually incredibly... doable. Sure, there are frameworks and languages and whatever other hurdles to overcome before I just drop a method into a Unity game, but it's really not that far off.\n\nIn the first couple of lessons, I've fine-tuned an image classifer based on the resnet18 model. We've even dabbled with the HuggingFace community site to make a public Space, which is a site that hosts the model I trained to classify images between black bears, grizzly bears, and teddy bears. It's not very sophisticated, but it's a surprisingly complete end-to-end deployment of a *thing* that uses an image classification model. And you can just use it right now!\n\n[![A basic bear classifier that I made ➡ Click to try it out on huggingface.co!](bear_classifier.jpg)](https://huggingface.co/spaces/bk6000/bear_classifier)\n\nOkay, one more thing before I go: this blog post can have Python code in it, like a notebook. I should try that out, otherwise this has just been a really, really complicated Wordpress site.\n\n```{python}\nfrom duckduckgo_search import ddg_images\nfrom fastcore.all import *\nfrom fastdownload import download_url\nfrom fastai.vision.all import *\n\ndef search_images(term, max_images=30):\n    print(f\"Searching for '{term}'\")\n    return L(ddg_images(term, max_results=max_images)).itemgot('image')\n\nurls = search_images('grizzly bear', max_images=1)\ndest = 'grizzly.jpg'\ndownload_url(urls[0], dest, show_progress=False)\n\nim = Image.open(dest)\nim.to_thumb(256,256)\n```\n\nNow to get this blog post rendered and committed to a GitHub repo and published to GitHub Pages, preferably using an automated GitHub Action..........\n\nThis was a lot easier in the GeoCities days."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.340","theme":"cosmo","title-block-banner":true,"title":"Hello Machine Learning World","author":"Ben Kane","date":"2023-04-25","image":"grizzly.jpg","categories":["learning"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}